name: Publish to NuGet.org

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_CONFIGURATION: Release

jobs:
  build:
    name: Build and publish
    runs-on: windows-latest
    outputs:
      version: ${{ steps.gitversion.outputs.fullSemVer }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup NuGet authentication
      uses: actions/setup-dotnet@v2
      with:
        source-url: https://nuget.pkg.github.com/biosero/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: '5.x'

    - name: GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        useConfigFile: true
        additionalArguments: -updateprojectfiles

    - name: Build
      run: dotnet build Biosero.Orchestrator.DevTools.sln --configuration ${{ env.BUILD_CONFIGURATION }}

    - name: Test
      run: dotnet test Biosero.Orchestrator.DevTools.sln --no-build --configuration ${{ env.BUILD_CONFIGURATION }}

    - name: Package
      run: dotnet pack src/Biosero.Orchestrator.ScriptingTools/Biosero.Orchestrator.ScriptingTools.csproj --no-build --configuration ${{ env.BUILD_CONFIGURATION }} -p:PackageVersion=${{ steps.gitversion.outputs.fullSemVer }}

    - name: Sign
      env:
        CERTIFICATE_BASE64: ${{ secrets.CODE_SIGNING_CERT_BASE64 }}
        CERTIFICATE_PASSWORD: ${{ secrets.CODE_SIGNING_PASSWORD }}
      run: |
        # create pfx from base64
        $pfxPath = Join-Path -Path $env:RUNNER_TEMP -ChildPath "cert.pfx";
        $certBytes = [System.Convert]::FromBase64String($env:CERTIFICATE_BASE64)
        $certCollection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection
        $certCollection.Import($certBytes, $env:CERTIFICATE_PASSWORD, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)
        $protectedCertificateBytes = $certCollection.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12, $env:CERTIFICATE_PASSWORD)
        [System.IO.File]::WriteAllBytes($pfxPath, $protectedCertificateBytes)

        dotnet nuget sign src/Biosero.Orchestrator.ScriptingTools/bin/${{ env.BUILD_CONFIGURATION }}/Biosero.Orchestrator.ScriptingTools.${{ steps.gitversion.outputs.fullSemVer }}.nupkg --certificate-path "$pfxPath" --certificate-password "$env:CERTIFICATE_PASSWORD" --timestamper http://timestamp.digicert.com

    - name: Publish
      run: dotnet nuget push src/Biosero.Orchestrator.ScriptingTools/bin/${{ env.BUILD_CONFIGURATION }}/Biosero.Orchestrator.ScriptingTools.${{ steps.gitversion.outputs.fullSemVer }}.nupkg --api-key ${{ secrets.NUGET_ORG_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Archive
      uses: actions/upload-artifact@v3
      with:
        name: Biosero.Orchestrator.ScriptingTools.${{ steps.gitversion.outputs.fullSemVer }}.nupkg
        path: src/Biosero.Orchestrator.ScriptingTools/bin/${{ env.BUILD_CONFIGURATION }}/Biosero.Orchestrator.ScriptingTools.${{ steps.gitversion.outputs.fullSemVer }}.nupkg
        retention-days: 5